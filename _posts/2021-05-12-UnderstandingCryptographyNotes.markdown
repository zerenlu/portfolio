---
layout: post
title:  "Understanding Cryptography 读书笔记"
date:   2021-05-12 17:03:01 +0100
categories: Cryptography
---

最近在入门密码学，从入门资源上看觉得《Understanding Cryptography》比较适合，用这篇博文来
记录一下学习过程。

# Chapter 1 简介密码学

这一章主要有三点需要了解：
- 不要用未公开的加密算法！ 历史证明，所有私密的加密算法一旦被获取/公开后很快便被破解，有效的加密算法是指攻击者在了解除密钥外所有加密算法的信息后，仍然无法破解/没有足够资源加密信息的算法。
- 取余运算在密码学中经常使用，以此来获得“环”的效果。三条横线的等号表示等号两边的数对于N(mod N)取余的话，余数相等。
- 密钥长度在112-128bit目前被认为是可靠的，256bit目前是最可靠的。

# Chapter 2 Stream Cipher流加密

加密目前可以分为两种：Stream Cipher流加密和Block Cipher块加密。流加密是将明文按bit加密，每个bit都有一个对应的密钥，可以理解为密钥的长度或者伪密钥的长度需要跟明文等长。 伪密钥是根据密钥产生的密钥。 块加密是将明文分成数据块，比如64bit为一个块，不够的要补长，然后将每个块用一个密钥加密。

要点:
- 异或运算XOR经常用在加密算法中,异或运算相当于`x+s mod 2`将明文与密钥的和对2取余。
- 流加密没有块加密流行(除了RC4?)，但有时流加密需要占用更少的资源，比较受嵌入式系统等资源受限的环境。
- One-Time-Pad 是安全的算法却不易实际应用，因为密钥的长度要和明文相同**且只能使用一次**，可以通过随机数基于密钥产生伪密钥，需要注意的是随机数生成器必须是专门为密码学设计的随机数生成器，一般标准库中的随机数函数可以预测，因此不能用。
- LFSRs Linear feedback shift registers有些类似于斐波那契数列，不同在于s1+s2 = s4。单个LFSR可以破解因为根据LFSR产生的结果是有限的，而且具有循环性。但是多个LFSRs合理地组合到一起就能具有很高的安全性，比如Trivium。
