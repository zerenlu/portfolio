---
layout: post
title:  "通过Cmake添加头文件和源文件到VS项目中"
date:   2021-04-11 13:53:01 +0100
categories: OpenCV
---

在[用CMake配置OpenCV-VisualStudio项目](https://zerenlu.github.io/opencv/2021/04/08/%E7%94%A8CMake%E9%85%8D%E7%BD%AEOpenCV-VisualStudio%E9%A1%B9%E7%9B%AE.html)这篇文章中，介绍了如何用CMake配置VS项目，而在实际应用中，我们往往需要向项目中添加自定义的头文件和源文件，接下来这篇文章将介绍如何将自定义的头文件和源文件添加到CMake配置的VS项目中。

### 布局文件结构

首先我们的基本项目文件夹结构如下：

```
IntroCV
|-CMakefiles.txt
|-main.cpp
|-build
```
其中**buid**文件夹是用来存放`cmake`产生的CV项目文件的，无论想要做什么更改，都不要动build文件夹里面的东西，因为里面的东西是自动生成的。

那么这时我想添加一个头文件和源文件用来存放函数，比如说是添加噪声的函数，那么我们新建一个文件夹**noise**:

```
IntroCV
|-CMakefiles.txt
|-main.cpp
|-build
|-noise
```

在**noise**文件夹里面存放写好的`noise.h`和`noise.cpp`：

```
IntroCV
|-CMakefiles.txt
|-main.cpp
|-build
|-noise
  |-noise.h
  |-noise.cpp
```
### 配置CMakeLists.txt

文件布局好后，在**CMakeLists.txt**中添加源文件和头文件：

```cmake
cmake_minimum_required(VERSION 3.10)

#设定项目名称
project(IntroCV)

#设定路径变量
set(opencv_root "D:/OpenCV4/opencv")
set(opencv_include ${opencv_root}/build/include)
set(opencv_lib_dir ${opencv_root}/build/x64/vc15/lib)
set(opencv_libs opencv_world451d.lib)

#设定noise代码文件路径
set(NOISE "./noise/noise.cpp" "./noise/noise.h")

#查找指定目录下所有cpp与h文件，并存放到指定变量名SC_FILES中
FILE(GLOB SC_FILES "*.cpp", "*.h")
#设定include
include_directories(${opencv_include})

#设定lib位置
link_directories(${opencv_lib_dir})
#设定引用的lib名称
link_libraries(${opencv_libs})

#将NOISE源码分组到NOISE组里
source_group(noise FILES ${NOISE})

#设定输出名称"IntroCV"
add_executable(IntroCV ${SC_FILES} ${NOISE})
```

然后在build文件夹下，命令行运行`cmake ..`就搞定啦~
